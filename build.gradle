buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"

version = modVersion
group= modGroup
archivesBaseName = modBaseName

sourceSets {
    core {
        compileClasspath = main.compileClasspath
        runtimeClasspath = main.runtimeClasspath
    }
    main {
        compileClasspath += core.output
        runtimeClasspath += core.output
    }
}

minecraft {
    version = project.forgeVersion
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = project.mcpVersion
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    clientJvmArgs = serverJvmArgs = ['-Dfml.coreMods.load=ladysnake.masquerade.core.MasqueradeLoadingPlugin']
}

repositories {
    mavenCentral()
}

dependencies {
}

//Builds the coremod jar
task coreJar(type: Jar) {
    from(sourceSets.core.output)
    manifest{
            attributes ([
                    'FMLCorePlugin': 'ladysnake.masquerade.core.MasqueradeLoadingPlugin',
                    'Maven-Artifact': "${project.group}:${project.archivesBaseName}-core:${project.version}",
                    'Timestamp': System.currentTimeMillis()
            ])
    }
    classifier 'core'
}

reobf {
    coreJar { mappingType = 'SEARGE' }
}

jar {
    dependsOn reobfCoreJar
    // TODO sign the jar

    classifier = 'universal'

    exclude("pack.mcmeta")
    exclude("pack.png")

    from(coreJar.archivePath.absolutePath) {
        include '*'
    }

    addMainManifestAttributes(manifest)
}

//Adds the main jar manifest attributes to the specified Manifest
def addMainManifestAttributes(Manifest m) {
    m.attributes ('ContainedDeps': coreJar.archivePath.name)
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version":project.version, "mcversion":project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}
